# The MIT License (MIT)
# 
# Copyright (c) 2015 github.com/Pan7
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
cmake_minimum_required(VERSION 2.8.9)

project("basegame cgame qvm")

set(CGAME_TARGET "basegame_cgame_qvm")

set(SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../../..")
set(CMAKELIST_DIR "${SOURCE_DIR}/misc/CMakeLists")

include("${CMAKELIST_DIR}/include/directory_constants.cmake")
include("${CMAKELIST_DIR}/include/default_options.cmake")
include("${CMAKELIST_DIR}/include/qvm_tools.cmake")
include("${CMAKELIST_DIR}/include/qvm_options.cmake")

include("${CMAKELIST_DIR}/include/cmake_compatibility.cmake")


set(BASEGAME_QVM_INSTALL_DIR "${DEFAULT_BASEGAME_QVM_INSTALL_DIR}" CACHE PATH "Installation directory")


#*_main.c has to be the first for vmMain in qvms
set(CGAME_SOURCES 
	"${CGAME_DIR}/cg_main.c"

	"${CGAME_DIR}/cg_consolecmds.c"
	"${CGAME_DIR}/cg_draw.c"
	"${CGAME_DIR}/cg_drawtools.c"
	"${CGAME_DIR}/cg_effects.c"
	"${CGAME_DIR}/cg_ents.c"
	"${CGAME_DIR}/cg_event.c"
	"${CGAME_DIR}/cg_info.c"
	"${CGAME_DIR}/cg_localents.c"

	"${CGAME_DIR}/cg_marks.c"
	"${CGAME_DIR}/cg_particles.c"
	"${CGAME_DIR}/cg_players.c"
	"${CGAME_DIR}/cg_playerstate.c"
	"${CGAME_DIR}/cg_predict.c"
	"${CGAME_DIR}/cg_scoreboard.c"
	"${CGAME_DIR}/cg_servercmds.c"
	"${CGAME_DIR}/cg_snapshot.c"
	"${CGAME_DIR}/cg_view.c"
	"${CGAME_DIR}/cg_weapons.c"

#	"${CGAME_DIR}/cg_syscalls.c"
)
set(CGAME_HEADERS 
	"${CGAME_DIR}/cg_local.h"
	"${CGAME_DIR}/cg_public.h"
)
set(CGAME_ASM_SOURCES 
	"${CGAME_DIR}/cg_syscalls.asm"
)
set(GAME_SOURCES 
	"${GAME_DIR}/bg_misc.c"
	"${GAME_DIR}/bg_pmove.c"
	"${GAME_DIR}/bg_slidemove.c"
	"${GAME_DIR}/bg_lib.c"
)
set(GAME_HEADERS 
	"${GAME_DIR}/bg_local.h"
	"${GAME_DIR}/bg_public.h"
	"${GAME_DIR}/bg_lib.h"
)
set(QCOMMON_SOURCES 
	"${QCOMMON_DIR}/q_math.c"
	"${QCOMMON_DIR}/q_shared.c"
)
set(QCOMMON_HEADERS 
	"${QCOMMON_DIR}/q_shared.h"
)

set(CGAME_DEFINITIONS)
set(CGAME_LIBRARIES)
set(CGAME_INCLUDE_DIRS)
set(CGAME_LDFLAGS)
set(CGAME_CFLAGS)
set(CGAME_C_SOURCES)
set(CGAME_C_HEADERS)



list(APPEND CGAME_DEFINITIONS "-DCGAME")
list(APPEND CGAME_DEFINITIONS "-DQ3_VM")

list(APPEND CGAME_C_SOURCES ${CGAME_SOURCES} ${GAME_SOURCES} ${QCOMMON_SOURCES})
list(APPEND CGAME_C_HEADERS ${CGAME_HEADERS} ${GAME_HEADERS} ${QCOMMON_HEADERS})

source_group("cgame\\Source Files" FILES ${CGAME_SOURCES})
source_group("cgame\\Header Files" FILES ${CGAME_HEADERS})
source_group("cgame" FILES ${CGAME_ASM_SOURCES})
source_group("game\\Source Files" FILES ${GAME_SOURCES})
source_group("game\\Header Files" FILES ${GAME_HEADERS})
source_group("qcommon\\Source Files" FILES ${QCOMMON_SOURCES})
source_group("qcommon\\Header Files" FILES ${QCOMMON_HEADERS})


set(QVM_FILENAME "${CMAKE_CURRENT_BINARY_DIR}/cgame.qvm")

add_library("${CGAME_TARGET}" STATIC ${CGAME_C_SOURCES} ${CGAME_C_HEADERS} ${CGAME_ASM_SOURCES} "${QVM_FILENAME}")

set(ASM_DIRNAME "asm${CMAKE_BUILD_TYPE}")
file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/${ASM_DIRNAME}")

set(CGAME_ASM_FILES)

foreach(SOURCE ${CGAME_C_SOURCES})
	get_filename_component(BASE_FILENAME "${SOURCE}" NAME_WE)
	set(ASM_FILENAME "${CMAKE_CURRENT_BINARY_DIR}/${ASM_DIRNAME}/${BASE_FILENAME}.asm")

	add_custom_command(OUTPUT "${ASM_FILENAME}"
		COMMAND "$<TARGET_FILE:${Q3LCC_TARGET}>" ARGS ${Q3LCC_OPTIIONS} ${Q3LCC_VERBOSE_OPTION} ${CGAME_DEFINITIONS} -o "${ASM_FILENAME}" "${SOURCE}" -Wo-lrccdir=$<TARGET_FILE_DIR:${Q3RCC_TARGET}> -Wo-lcppdir=$<TARGET_FILE_DIR:${Q3CPP_TARGET}> -I${CGAME_DIR} -I${GAME_DIR} -I${QCOMMON_DIR}
		DEPENDS "${SOURCE}"
	)
	list(APPEND CGAME_ASM_FILES "${ASM_FILENAME}")
	set_source_files_properties("${SOURCE}" PROPERTIES HEADER_FILE_ONLY TRUE)
endforeach()

foreach(SOURCE ${CGAME_ASM_SOURCES})
	set_source_files_properties("${SOURCE}" PROPERTIES HEADER_FILE_ONLY TRUE)
endforeach()

set(SOURCES ${CGAME_ASM_FILES} ${CGAME_ASM_SOURCES})

add_custom_command(OUTPUT "${QVM_FILENAME}"
	COMMAND "$<TARGET_FILE:${Q3ASM_TARGET}>" ${Q3CPP_OPTIIONS} ${Q3CPP_VERBOSE_OPTION} ${VQ3_OPTION} -o "${QVM_FILENAME}" ${SOURCES}
	DEPENDS ${SOURCES}
)

if(BASEGAME_QVM_INSTALL_DIR)
	install(FILES "${QVM_FILENAME}" DESTINATION "${BASEGAME_QVM_INSTALL_DIR}")
endif(BASEGAME_QVM_INSTALL_DIR)

